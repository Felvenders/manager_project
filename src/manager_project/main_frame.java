/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package manager_project;

import java.text.ParseException;
import java.util.ArrayList;
import java.util.Timer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author DroNN4e$$$$$ &&&&&& DANATELLO VELIKIY
 */
public class main_frame extends javax.swing.JFrame {

    public main_frame() {
        this.helper = new DB_helper();
        initComponents();
    }

    private static String name = null;
    private static ArrayList<Timer> timer_list = new ArrayList();

    //Создаем переменную для работы с таблицей
    private static DefaultTableModel tblModel = null;
    private static DefaultTableModel otherModel = null;
    
    //Объект вспомогательного класса.
    DB_helper helper;

    /**
     * Creates new form main_frame
     */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Name_enter = new javax.swing.JDialog();
        Name_bar = new javax.swing.JTextField();
        Name_label = new javax.swing.JLabel();
        Name_ok = new javax.swing.JButton();
        Name_exit = new javax.swing.JButton();
        add_task = new javax.swing.JFrame();
        add_close = new javax.swing.JButton();
        Task_title = new javax.swing.JLabel();
        Task_date = new javax.swing.JLabel();
        Task_time = new javax.swing.JLabel();
        Task_tag = new javax.swing.JLabel();
        Task_priority = new javax.swing.JLabel();
        Task_comm = new javax.swing.JLabel();
        Task_name = new javax.swing.JTextField();
        add_date_time = new javax.swing.JTextField();
        add_ex_time = new javax.swing.JTextField();
        add_tag = new javax.swing.JTextField();
        add_priority = new javax.swing.JTextField();
        Task_ok = new javax.swing.JButton();
        Task = new javax.swing.JLabel();
        add_comment = new javax.swing.JTextField();
        show_task = new javax.swing.JFrame();
        jLabel7 = new javax.swing.JLabel();
        Show_time = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        Show_tag = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        Show_priority = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        Show_title = new javax.swing.JTextField();
        Show_exit_button = new javax.swing.JButton();
        Show_date = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        Show_comm = new javax.swing.JTextField();
        Delete_task = new javax.swing.JDialog();
        Delete_task_label = new javax.swing.JLabel();
        No_button = new javax.swing.JButton();
        Yes_button = new javax.swing.JButton();
        Other_window = new javax.swing.JFrame();
        jScrollPane4 = new javax.swing.JScrollPane();
        other_table = new javax.swing.JTable();
        other_text_table = new javax.swing.JTextField();
        other_exit_button = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        Process_tasks = new javax.swing.JButton();
        Title_label = new javax.swing.JLabel();
        Journal_tasks = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        Add_Task = new javax.swing.JButton();
        Delete_Task = new javax.swing.JButton();
        Exit = new javax.swing.JButton();

        Name_enter.setMinimumSize(new java.awt.Dimension(350, 150));

        Name_bar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Name_barActionPerformed(evt);
            }
        });

        Name_label.setText("Введите имя:");

        Name_ok.setBackground(new java.awt.Color(232, 225, 255));
        Name_ok.setText("OK");
        Name_ok.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Name_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Name_okActionPerformed(evt);
            }
        });

        Name_exit.setBackground(new java.awt.Color(232, 225, 255));
        Name_exit.setText("Выход");
        Name_exit.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Name_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Name_exitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Name_enterLayout = new javax.swing.GroupLayout(Name_enter.getContentPane());
        Name_enter.getContentPane().setLayout(Name_enterLayout);
        Name_enterLayout.setHorizontalGroup(
            Name_enterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Name_enterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Name_enterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Name_enterLayout.createSequentialGroup()
                        .addComponent(Name_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Name_bar, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE))
                    .addGroup(Name_enterLayout.createSequentialGroup()
                        .addComponent(Name_ok, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Name_exit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        Name_enterLayout.setVerticalGroup(
            Name_enterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Name_enterLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(Name_enterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Name_label)
                    .addComponent(Name_bar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(Name_enterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Name_ok)
                    .addComponent(Name_exit))
                .addContainerGap())
        );

        add_task.setBackground(new java.awt.Color(232, 220, 255));
        add_task.setMinimumSize(new java.awt.Dimension(638, 463));

        add_close.setBackground(new java.awt.Color(232, 225, 255));
        add_close.setText("Закрыть окно");
        add_close.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        add_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_closeActionPerformed(evt);
            }
        });

        Task_title.setText("Название задачи");

        Task_date.setText("Запланированное время задачи");

        Task_time.setText("Время выполнения задачи");

        Task_tag.setText("Тэг");

        Task_priority.setText("Приоритет");

        Task_comm.setText("Комментарий к задаче");

        Task_name.setText("Название");
        Task_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Task_nameActionPerformed(evt);
            }
        });

        add_date_time.setText("20YY-MM-DD HH:MM:SS");
        add_date_time.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_date_timeActionPerformed(evt);
            }
        });

        add_ex_time.setText("HH:MM:SS");

        add_tag.setText("Тэг");

        add_priority.setText("Высокий/Средний/Низкий");

        Task_ok.setBackground(new java.awt.Color(232, 225, 255));
        Task_ok.setText("Добавить задачу");
        Task_ok.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Task_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Task_okActionPerformed(evt);
            }
        });

        Task.setText("Добавление задачи");

        add_comment.setText("Ваш комментарий");

        javax.swing.GroupLayout add_taskLayout = new javax.swing.GroupLayout(add_task.getContentPane());
        add_task.getContentPane().setLayout(add_taskLayout);
        add_taskLayout.setHorizontalGroup(
            add_taskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(add_taskLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(add_taskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(add_taskLayout.createSequentialGroup()
                        .addGroup(add_taskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Task_title)
                            .addComponent(Task_date)
                            .addComponent(Task_time)
                            .addComponent(Task_tag)
                            .addComponent(Task_priority)
                            .addComponent(Task_comm))
                        .addGap(24, 24, 24)
                        .addGroup(add_taskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Task_name)
                            .addComponent(add_date_time)
                            .addComponent(add_ex_time)
                            .addComponent(add_tag)
                            .addComponent(add_priority, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE)
                            .addComponent(add_comment)))
                    .addGroup(add_taskLayout.createSequentialGroup()
                        .addComponent(add_close)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Task_ok)))
                .addContainerGap())
            .addGroup(add_taskLayout.createSequentialGroup()
                .addGap(261, 261, 261)
                .addComponent(Task)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        add_taskLayout.setVerticalGroup(
            add_taskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, add_taskLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(Task)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(add_taskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Task_title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Task_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(add_taskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Task_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(add_date_time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(add_taskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Task_time, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(add_ex_time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(add_taskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Task_tag, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(add_tag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(add_taskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Task_priority, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(add_priority, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(add_taskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Task_comm)
                    .addComponent(add_comment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(87, 87, 87)
                .addGroup(add_taskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(add_close)
                    .addComponent(Task_ok))
                .addContainerGap())
        );

        show_task.setMinimumSize(new java.awt.Dimension(638, 463));

        jLabel7.setText("Название задачи");

        jLabel8.setText("Запланированное время задачи");

        jLabel9.setText("Время выполнения задачи");

        jLabel10.setText("Тэг");

        jLabel11.setText("Приоритет");

        jLabel12.setText("Комментарий к задаче");

        Show_exit_button.setBackground(new java.awt.Color(232, 225, 255));
        Show_exit_button.setText("Закрыть окно");
        Show_exit_button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Show_exit_button.setMaximumSize(new java.awt.Dimension(638, 463));
        Show_exit_button.setMinimumSize(new java.awt.Dimension(638, 463));
        Show_exit_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Show_exit_buttonActionPerformed(evt);
            }
        });

        jLabel14.setText("Просмотр запланированной задачи");

        javax.swing.GroupLayout show_taskLayout = new javax.swing.GroupLayout(show_task.getContentPane());
        show_task.getContentPane().setLayout(show_taskLayout);
        show_taskLayout.setHorizontalGroup(
            show_taskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(show_taskLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(show_taskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(show_taskLayout.createSequentialGroup()
                        .addGroup(show_taskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addGap(24, 24, 24)
                        .addGroup(show_taskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Show_title)
                            .addComponent(Show_date)
                            .addComponent(Show_time)
                            .addComponent(Show_tag)
                            .addComponent(Show_priority)
                            .addComponent(Show_comm)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, show_taskLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Show_exit_button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, show_taskLayout.createSequentialGroup()
                .addContainerGap(202, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addGap(184, 184, 184))
        );
        show_taskLayout.setVerticalGroup(
            show_taskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, show_taskLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(show_taskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Show_title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(show_taskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Show_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(show_taskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Show_time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(show_taskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Show_tag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(show_taskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Show_priority, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(show_taskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(Show_comm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(96, 96, 96)
                .addComponent(Show_exit_button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        Delete_task.setMinimumSize(new java.awt.Dimension(380, 125));

        Delete_task_label.setText("Вы действительно хотите удалить выбранные задачи?");

        No_button.setBackground(new java.awt.Color(232, 225, 255));
        No_button.setText("Нет");
        No_button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        No_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                No_buttonActionPerformed(evt);
            }
        });

        Yes_button.setBackground(new java.awt.Color(232, 225, 255));
        Yes_button.setText("Да");
        Yes_button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Yes_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Yes_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Delete_taskLayout = new javax.swing.GroupLayout(Delete_task.getContentPane());
        Delete_task.getContentPane().setLayout(Delete_taskLayout);
        Delete_taskLayout.setHorizontalGroup(
            Delete_taskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Delete_taskLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(No_button, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(Yes_button, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Delete_taskLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Delete_task_label)
                .addGap(27, 27, 27))
        );
        Delete_taskLayout.setVerticalGroup(
            Delete_taskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Delete_taskLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Delete_task_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Delete_taskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(No_button, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Yes_button, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Other_window.setMinimumSize(new java.awt.Dimension(720, 370));

        other_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Название задачи", "Запланированное время", "Время выполнения", "Тэг", "Приоритет"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        other_table.getTableHeader().setReorderingAllowed(false);
        other_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                other_tableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(other_table);

        other_exit_button.setBackground(new java.awt.Color(232, 225, 255));
        other_exit_button.setText("Close");
        other_exit_button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        other_exit_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                other_exit_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Other_windowLayout = new javax.swing.GroupLayout(Other_window.getContentPane());
        Other_window.getContentPane().setLayout(Other_windowLayout);
        Other_windowLayout.setHorizontalGroup(
            Other_windowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Other_windowLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Other_windowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Other_windowLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 708, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Other_windowLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(other_text_table, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(270, 270, 270))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Other_windowLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(other_exit_button, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        Other_windowLayout.setVerticalGroup(
            Other_windowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Other_windowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(other_text_table, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(other_exit_button)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));

        Table.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Название задачи", "Запланированное время", "Время выполнения", "Тэг", "Приоритет"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Table.getTableHeader().setReorderingAllowed(false);
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Table);

        jPanel1.setBackground(new java.awt.Color(232, 220, 255));

        Process_tasks.setBackground(new java.awt.Color(232, 225, 255));
        Process_tasks.setText("Задачи в процессе");
        Process_tasks.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Process_tasks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Process_tasksActionPerformed(evt);
            }
        });

        Title_label.setText("Планировщик задач");

        Journal_tasks.setBackground(new java.awt.Color(232, 225, 255));
        Journal_tasks.setText("Журнал задач");
        Journal_tasks.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Journal_tasks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Journal_tasksActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Journal_tasks, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(165, 165, 165)
                .addComponent(Title_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(169, 169, 169)
                .addComponent(Process_tasks, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Journal_tasks)
                    .addComponent(Title_label)
                    .addComponent(Process_tasks))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(232, 220, 255));

        Add_Task.setBackground(new java.awt.Color(232, 225, 255));
        Add_Task.setText("Добавить задачу");
        Add_Task.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Add_Task.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_TaskActionPerformed(evt);
            }
        });

        Delete_Task.setBackground(new java.awt.Color(232, 225, 255));
        Delete_Task.setText("Удалить задачу");
        Delete_Task.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Delete_Task.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_TaskActionPerformed(evt);
            }
        });

        Exit.setBackground(new java.awt.Color(232, 225, 255));
        Exit.setText("Выход");
        Exit.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Add_Task, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(177, 177, 177)
                .addComponent(Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Delete_Task, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Add_Task)
                    .addComponent(Delete_Task)
                    .addComponent(Exit))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Add_TaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_TaskActionPerformed
        //Выводим окно добавления записи
        add_task.setVisible(true);
        add_task.setResizable(false);
        add_task.setLocationRelativeTo(null);

    }//GEN-LAST:event_Add_TaskActionPerformed

    private void Delete_TaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_TaskActionPerformed
        // Выводим вопрос
        this.stop_timers(timer_list);

        Delete_task.setVisible(true);
        Delete_task.setResizable(false);
        Delete_task.setLocationRelativeTo(null);
    }//GEN-LAST:event_Delete_TaskActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        // Выход из программы
        System.exit(0);
    }//GEN-LAST:event_ExitActionPerformed

    private void Name_barActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Name_barActionPerformed

    }//GEN-LAST:event_Name_barActionPerformed

    private void Name_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Name_okActionPerformed
        //Вводим имя и заносим данные
        boolean flag = false;

        if (Name_bar.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Пожалуйста, введите имя!");

        } else {
            name = Name_bar.getText();
            Name_enter.setVisible(false);
            try {
                check();
            } catch (ParseException ex) {
                Logger.getLogger(main_frame.class.getName()).log(Level.SEVERE, null, ex);
            }
            flag = true;
        }
        if (flag) {
            this.setVisible(true);
            try {
                //Запускаем таймеры с вводом имени
                this.start_timer();
                helper.emergency_start(name);
            } catch (ParseException | InterruptedException ex) {
                Logger.getLogger(main_frame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_Name_okActionPerformed

    private void add_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_closeActionPerformed
        //Закрываем окно add_task
        add_task.setVisible(false);
    }//GEN-LAST:event_add_closeActionPerformed

    private void Show_exit_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Show_exit_buttonActionPerformed
        //Выходим
        show_task.setVisible(false);
    }//GEN-LAST:event_Show_exit_buttonActionPerformed

    private void Task_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Task_okActionPerformed
        //Добавляем запрос в БД и таблицу
        if (Task_name.getText().equals("") || add_date_time.getText().equals("") || add_ex_time.getText().equals("") || add_tag.getText().equals("") || add_priority.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Пожалуйста, заполните все поля!");
        } else if (!Task_test(Task_name.getText(), add_date_time.getText(), add_ex_time.getText(), add_tag.getText(), add_priority.getText())) {
            JOptionPane.showMessageDialog(this, "Вы ввели недопустимые символы!");
        } else {
            this.stop_timers(timer_list);
            String sql = "INSERT INTO main_table VALUES ('" + Task_name.getText() + "', '" + add_date_time.getText() + "', '" + add_ex_time.getText() + "', '" + add_tag.getText() + "', '" + add_priority.getText() + "', '" + "ожидает', '" + add_comment.getText() + "', '" + name + "');";
            try {
                //Добавляем
                helper.add_data(sql);
            } catch (ParseException ex) {
                Logger.getLogger(main_frame.class.getName()).log(Level.SEVERE, null, ex);
            }
            tblModel.setRowCount(0);
            add_task.setVisible(false);
            tblModel = (DefaultTableModel) Table.getModel();
            try {
                check();
                this.start_timer();
            } catch (ParseException | InterruptedException ex) {
                Logger.getLogger(main_frame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_Task_okActionPerformed

    private void Yes_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Yes_buttonActionPerformed
        // Удаляем выбранные задачи
        this.stop_timers(timer_list);
        while (this.Table.getSelectedRow() != -1) {
            // Удаляем задачи
            int index = Table.getSelectedRow();
            tblModel.removeRow(Table.getSelectedRow());
            //Удаление задачи из БД
            String sql = "SELECT * FROM main_table WHERE (users_name = '" + name + "') AND (task_labels = 'ожидает') ORDER BY date_time asc;";
            try {
                helper.delete_data(sql, index, name);
            } catch (ParseException ex) {
                Logger.getLogger(main_frame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        try {
            this.start_timer();
        } catch (ParseException | InterruptedException ex) {
            Logger.getLogger(main_frame.class.getName()).log(Level.SEVERE, null, ex);
        }
        Delete_task.setVisible(false);
    }//GEN-LAST:event_Yes_buttonActionPerformed

    private void No_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_No_buttonActionPerformed
        // Отказ от удаления задачи
        Delete_task.setVisible(false);
    }//GEN-LAST:event_No_buttonActionPerformed

    private void Task_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Task_nameActionPerformed

    }//GEN-LAST:event_Task_nameActionPerformed

    private void add_date_timeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_date_timeActionPerformed

    }//GEN-LAST:event_add_date_timeActionPerformed

    private void TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMouseClicked
        //Настраиваем дабл клик для основной таблицы
        String sql = "SELECT * FROM main_table WHERE " + "users_name = ('" + name + "') AND task_labels = ('ожидает') ORDER BY date_time asc;";
        if (evt.getClickCount() == 2) {
            if (Table.getSelectedRow() != -1) {
                int index = 0;
                index = Table.getSelectedRow();
                main_table main = new main_table();

                show_task.setVisible(true);
                show_task.setResizable(false);
                show_task.setLocationRelativeTo(null);

                try {
                    main = helper.get_single_data(index, name, sql);
                } catch (ParseException ex) {
                    Logger.getLogger(main_frame.class.getName()).log(Level.SEVERE, null, ex);
                }
                Show_title.setText(main.getTitle());
                Show_date.setText(main.getDate_time());
                Show_time.setText(main.getEx_time());
                Show_tag.setText(main.getTag());
                Show_priority.setText(main.getPriority());
                Show_comm.setText(main.getComment_());
                Show_title.setEditable(false);
                Show_date.setEditable(false);
                Show_time.setEditable(false);
                Show_tag.setEditable(false);
                Show_priority.setEditable(false);
                Show_comm.setEditable(false);
            }
        }
    }//GEN-LAST:event_TableMouseClicked

    private void other_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_other_tableMouseClicked
        //Настраиваем дабл клик по полю таблицы для вывода
        String sql;
        boolean flag = true;
        if (other_text_table.getText().contains("Задачи в процессе:")) {
            sql = "SELECT * FROM main_table WHERE " + "users_name = ('" + name + "') AND task_labels = ('в процессе') ORDER BY date_time asc;";
        } else {
            sql = "SELECT * FROM main_table WHERE " + "users_name = ('" + name + "') AND task_labels = ('выполнена') ORDER BY date_time asc;";
        }

        if (evt.getClickCount() == 2) {
            if (other_table.getSelectedRow() != -1) {
                int index = 0;
                index = other_table.getSelectedRow();
                main_table main = new main_table();

                show_task.setVisible(true);
                show_task.setResizable(false);
                show_task.setLocationRelativeTo(null);

                try {
                    main = helper.get_single_data(index, name, sql);
                } catch (ParseException ex) {
                    Logger.getLogger(main_frame.class.getName()).log(Level.SEVERE, null, ex);
                }
                Show_title.setText(main.getTitle());
                Show_date.setText(main.getDate_time());
                Show_time.setText(main.getEx_time());
                Show_tag.setText(main.getTag());
                Show_priority.setText(main.getPriority());
                Show_comm.setText(main.getComment_());
                Show_title.setEditable(false);
                Show_date.setEditable(false);
                Show_time.setEditable(false);
                Show_tag.setEditable(false);
                Show_priority.setEditable(false);
                Show_comm.setEditable(false);
            }
        }
    }//GEN-LAST:event_other_tableMouseClicked

    private void other_exit_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_other_exit_buttonActionPerformed
        //Выход из вспомогательной таблицы
        other_table.removeAll();
        otherModel.setRowCount(0);
        otherModel = (DefaultTableModel) other_table.getModel();
        Other_window.setVisible(false);
    }//GEN-LAST:event_other_exit_buttonActionPerformed

    private void Process_tasksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Process_tasksActionPerformed
        //Выводим задачи в процессе
        Other_window.setVisible(true);
        Other_window.setResizable(false);
        Other_window.setLocationRelativeTo(null);

        other_text_table.setText("Задачи в процессе:");
        other_text_table.setEditable(false);

        ArrayList<main_table> list = new ArrayList<>();
        String sql = "SELECT * FROM main_table WHERE " + "users_name = ('" + name + "') AND task_labels = ('в процессе') ORDER BY date_time asc;";
        
        try {
            //Достаем из БД данные
            list = helper.take_data(sql);
            //Создаем объект таблицы, с которым будем работать
        } catch (ParseException ex) {
            Logger.getLogger(main_frame.class.getName()).log(Level.SEVERE, null, ex);
        }

        for (main_table main : list) {
            String DatA[] = {main.getTitle(), main.getDate_time(), main.getEx_time(), main.getTag(), main.getPriority()};
            otherModel.addRow(DatA);
        }
    }//GEN-LAST:event_Process_tasksActionPerformed

    private void Journal_tasksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Journal_tasksActionPerformed
        //Открываем журнал задач
        Other_window.setVisible(true);
        Other_window.setResizable(false);
        Other_window.setLocationRelativeTo(null);

        other_text_table.setText("Журнал задач:");
        other_text_table.setEditable(false);

        ArrayList<main_table> list = new ArrayList<>();
        String sql = "SELECT * FROM main_table WHERE " + "users_name = ('" + name + "') AND task_labels = ('выполнена') ORDER BY date_time asc;";

        try {
            //Достаем из БД данные
            list = helper.take_data(sql);
        } catch (ParseException ex) {
            Logger.getLogger(main_frame.class.getName()).log(Level.SEVERE, null, ex);
        }

        for (main_table main : list) {
            String DatA[] = {main.getTitle(), main.getDate_time(), main.getEx_time(), main.getTag(), main.getPriority()};
            otherModel.addRow(DatA);
        }
    }//GEN-LAST:event_Journal_tasksActionPerformed

    private void Name_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Name_exitActionPerformed
        //Выходим
        System.exit(0);
    }//GEN-LAST:event_Name_exitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {            //main
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>        

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new main_frame().setVisible(true);
        });

    }
    //Функции для работы программы.

    public String getName() {                                                    //Функция вывода имени за класс
        return main_frame.name;
    }

    //Инициализируем переменную
    public void Initial() {
        tblModel = (DefaultTableModel) Table.getModel();
        otherModel = (DefaultTableModel) other_table.getModel();
        helper.setWindow(this);
        Name_enter.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        add_task.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        show_task.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        Delete_task.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        Other_window.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
    }

    //Выводим на экран окно запроса имени пользователя
    public void Start_Name() {
        Name_enter.setVisible(true);
        Name_enter.setResizable(false);
        Name_enter.setLocationRelativeTo(null);
    }

    //Функция вывода в таблицу данных из бд
    public void check() throws ParseException {
        tblModel.setRowCount(0);
        Table.removeAll();
        tblModel = (DefaultTableModel) Table.getModel();

        ArrayList<main_table> list = new ArrayList<>();
        String sql = "SELECT * FROM main_table WHERE " + "users_name = ('" + name + "') AND task_labels = ('ожидает') ORDER BY date_time asc;";

        //Достаем из БД данные
        list = helper.take_data(sql);
        //Создаем объект таблицы, с которым будем работать

        for (main_table main : list) {
            String DatA[] = {main.getTitle(), main.getDate_time(), main.getEx_time(), main.getTag(), main.getPriority()};
            tblModel.addRow(DatA);
        }
    }

    //Запускаем таймеры
    public void start_timer() throws ParseException, InterruptedException {
        timer_list = helper.planned_start(name);
    }

    //Останавливаем таймеры
    public void stop_timers(ArrayList<Timer> timer_list) {
        for (Timer timer : timer_list) {
            timer.cancel();
        }
        timer_list.clear();
    }
    
    //Проверяем названия для занесения в бд на различные символы
    public boolean Task_test (String Task_name, String add_data_time, String add_ex_time, String add_tag, String add_priority) {
        if ((Task_name.contains(";"))||(Task_name.contains("/"))||(Task_name.contains("."))||(Task_name.contains(","))||(Task_name.contains("{"))||(Task_name.contains("}"))||(Task_name.contains("["))||(Task_name.contains("]"))||(Task_name.contains("("))||(Task_name.contains(")"))||(Task_name.contains("|"))||(Task_name.contains("<"))||(Task_name.contains(">"))||(Task_name.contains("+"))||(Task_name.contains("="))){
            return false;
        } else if ((add_data_time.contains(";"))||(add_data_time.contains("/"))||(add_data_time.contains("."))||(add_data_time.contains(","))||(add_data_time.contains("{"))||(add_data_time.contains("}"))||(add_data_time.contains("["))||(add_data_time.contains("]"))||(add_data_time.contains("("))||(add_data_time.contains(")"))||(add_data_time.contains("|"))||(add_data_time.contains("<"))||(add_data_time.contains(">"))||(add_data_time.contains("+"))||(add_data_time.contains("="))) {
            return false;
        } else if ((add_ex_time.contains(";"))||(add_ex_time.contains("/"))||(add_ex_time.contains("."))||(add_ex_time.contains(","))||(add_ex_time.contains("{"))||(add_ex_time.contains("}"))||(add_ex_time.contains("["))||(add_ex_time.contains("]"))||(add_ex_time.contains("("))||(add_ex_time.contains(")"))||(add_ex_time.contains("|"))||(add_ex_time.contains("<"))||(add_ex_time.contains(">"))||(add_ex_time.contains("+"))||(add_ex_time.contains("="))) {
            return false;
        } else if ((add_tag.contains(";"))||(add_tag.contains("/"))||(add_tag.contains("."))||(add_tag.contains(","))||(add_tag.contains("{"))||(add_tag.contains("}"))||(add_tag.contains("["))||(add_tag.contains("]"))||(add_tag.contains("("))||(add_tag.contains(")"))||(add_tag.contains("|"))||(add_tag.contains("<"))||(add_tag.contains(">"))||(add_tag.contains("+"))||(add_tag.contains("="))) {
            return false;
        } else if ((add_priority.contains(";"))||(add_priority.contains("/"))||(add_priority.contains("."))||(add_priority.contains(","))||(add_priority.contains("{"))||(add_priority.contains("}"))||(add_priority.contains("["))||(add_priority.contains("]"))||(add_priority.contains("("))||(add_priority.contains(")"))||(add_priority.contains("|"))||(add_priority.contains("<"))||(add_priority.contains(">"))||(add_priority.contains("+"))||(add_priority.contains("="))) {
            return false;
        } else return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add_Task;
    private javax.swing.JButton Delete_Task;
    private javax.swing.JDialog Delete_task;
    private javax.swing.JLabel Delete_task_label;
    private javax.swing.JButton Exit;
    private javax.swing.JButton Journal_tasks;
    private javax.swing.JTextField Name_bar;
    private javax.swing.JDialog Name_enter;
    private javax.swing.JButton Name_exit;
    private javax.swing.JLabel Name_label;
    private javax.swing.JButton Name_ok;
    private javax.swing.JButton No_button;
    private javax.swing.JFrame Other_window;
    private javax.swing.JButton Process_tasks;
    private javax.swing.JTextField Show_comm;
    private javax.swing.JTextField Show_date;
    private javax.swing.JButton Show_exit_button;
    private javax.swing.JTextField Show_priority;
    private javax.swing.JTextField Show_tag;
    private javax.swing.JTextField Show_time;
    private javax.swing.JTextField Show_title;
    private static javax.swing.JTable Table;
    private javax.swing.JLabel Task;
    private javax.swing.JLabel Task_comm;
    private javax.swing.JLabel Task_date;
    private javax.swing.JTextField Task_name;
    private javax.swing.JButton Task_ok;
    private javax.swing.JLabel Task_priority;
    private javax.swing.JLabel Task_tag;
    private javax.swing.JLabel Task_time;
    private javax.swing.JLabel Task_title;
    private javax.swing.JLabel Title_label;
    private javax.swing.JButton Yes_button;
    private javax.swing.JButton add_close;
    private javax.swing.JTextField add_comment;
    private javax.swing.JTextField add_date_time;
    private javax.swing.JTextField add_ex_time;
    private javax.swing.JTextField add_priority;
    private javax.swing.JTextField add_tag;
    private javax.swing.JFrame add_task;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton other_exit_button;
    private static javax.swing.JTable other_table;
    private javax.swing.JTextField other_text_table;
    private javax.swing.JFrame show_task;
    // End of variables declaration//GEN-END:variables
}
